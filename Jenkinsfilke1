pipeline {
    agent any
    environment {
        DOCKERHUB_CREDENTIALS = credentials('testrivy')
    }

    tools {
        maven '3.8.6'
    }

    stages {
        stage("Source") {
            steps {
                git branch: 'master', url: 'https://github.com/tallahmad047/demo-docker-sonar-jenkins.git'
            }
        }

        stage("Build") {
            steps {
                sh 'mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install'
            }
        }

        stage("OWASP Dependency-Check Scan") {
            steps {
                dependencyCheck additionalArguments: '', odcInstallation: 'DP-Check', stopBuild: true
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage("SonarQube Analysis") {
            steps {
                sh 'mvn sonar:sonar'
            }
        }

        stage("Build Docker") {
            steps {
                // Build the Docker image
                sh ' docker build -t tallahmad/trivy:demo-docker-sonar-jenkins .'
                echo "Scanning Docker image for vulnerabilities: tallahmad/trivy:demo-docker-sonar-jenkins"
                        sh """
                            trivy image  --severity HIGH,CRITICAL tallahmad/trivy:demo-docker-sonar-jenkins
                        """

            }
        }

        stage("Login to Docker Hub") {
            steps {
                sh '''
                    echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
                '''
                echo 'Successfully logged in to Docker Hub'
            }
        }

        stage("Push Docker Image") {
            steps {
                sh ' docker push tallahmad/trivy:demo-docker-sonar-jenkins'
            }
        }
    }

    post {
        aborted {
            echo "Sending message to Agent"
        }

        failure {
            echo "Sending message to Agent"
        }

        success {
            echo "Sending message to Agent"
        }
    }
}
